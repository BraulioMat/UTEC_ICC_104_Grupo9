# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1jGk8_OUnX0sPszcRKpU4r8UCKc5ozep2
"""

from graphviz import Graph, Digraph
paises = input('Ingrese lista de paises:').replace(' ','').split(',')
edge = {}

for x in paises:
  while True:
    inp = input(f"Ingrese lista de paises que connectan con {x}: ").replace(' ','').split(',')
    edge[x] = inp
    break

h = Graph(strict=True)

for x in edge.keys():
  for y in edge[x]:
    h.edge(x, y)

#Para un ejemplo mas complejo, usamos el ejemplo

origen = 'Colombia'
destino = 'Argentina'
edge = {'Colombia':["Perú"], 'Perú':["Colombia","Chile","Brasil"], "Chile":["Argentina", "Perú"], "Argentina":["Chile",'Brasil'], "Brasil":['Argentina', 'Perú']}

g = Graph(strict=True)

for x in edge.keys():
  for y in edge[x]:
    g.edge(x, y)



def path(edge, origin, destination, previous = 'None', log = []):
  if destination in edge[origin]:
    return log[:] + [origin] + [destination]
  for x in edge[origin]:
    temp = []
    if x != previous:
      value = path(edge, x, destination, origin, log[:] + [origin])
      temp.append(value)
  return temp[0]

travel = path(edge, origen, destino)

print(edge)
print(f"Origen = {origen}, Destino = {destino}")
print(f"Distancia: {len(travel) - 1} paises")

for x in range(len(travel)-1):
  g.edge(travel[x], travel[x+1],color='red')

g

h
